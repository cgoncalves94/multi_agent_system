name: Run Python Tests

on:
  pull_request:
    branches:
      - main
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"] # Updated Python versions

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        poetry --version # Print Poetry version for debugging

    - name: Clear Poetry Cache
      run: |
        poetry cache clear --all pypi -n
        poetry cache clear --all _default_cache -n
      # Add other cache clear commands if necessary, though these are the main ones.

    - name: Print debug information
      run: |
        echo "Python version: $(python --version)"
        echo "Poetry version: $(poetry --version)"
        echo "pyproject.toml requires-python: $(grep 'requires-python' pyproject.toml || echo 'requires-python not found')"
        echo "Poetry env info:"
        poetry env info

    - name: Install dependencies with Poetry
      run: |
        # Attempt to remove poetry.lock if it might be causing issues, then install
        # This is a more aggressive debugging step; can be removed if not needed.
        # rm -f poetry.lock 
        poetry install --no-interaction --no-root --verbose
        # The --verbose flag will give more output if install fails

    - name: Run tests with pytest
      run: |
        poetry run pytest
